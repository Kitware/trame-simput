name: Test and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - &Checkout
        name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      # Install and run pre-commit
      - run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files

  pytest:
    name: Pytest ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        config:
        - {
            name: "Linux",
            os: ubuntu-latest
          }
        - {
            name: "MacOSX",
            os: macos-latest
          }
        - {
            name: "Windows",
            os: windows-latest
          }

    defaults:
      run:
        shell: bash

    steps:
      - *Checkout

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and Run Tests
        run: |
          pip install .
          pip install -r tests/requirements.txt
          pytest -s ./tests

  test-npm-build:
    runs-on: ubuntu-latest

    steps:
      - *Checkout

      - &SetUpNode
        name: Set Up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - &BuildVue2Components
        name: Build Vue2 Components
        run: |
          cd vue2-components
          npm ci
          npm run build

      - &BuildVue3Components
        name: Build Vue3 Components
        run: |
          cd vue3-components
          npm ci
          npm run build

  release:
    needs: [pre-commit, pytest, test-npm-build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: pypi
      url: https://pypi.org/p/trame-simput
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
      contents: write # IMPORTANT: mandatory for making GitHub Releases

    steps:
      - *Checkout

      - *SetUpNode

      - *BuildVue2Components

      - *BuildVue3Components

      - name: Python Semantic Release
        id: release
        uses: relekang/python-semantic-release@v10.3.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
